! https://github.com/jollyjinx/homematic/blob/master/Inventory.hms
!
! Run the script to get a nice inventory
!
!----- User setable variables

string  language    = "de";     ! either "en" for english or "de" for german;
boolean debug       = false;

!------ Execution

!
! generate the device list
!

integer devicecounter       = 0;
integer channelcount        = 0;
integer devicetypecount     = 0;
string  devicetypes         = ",";
string  devicesconcat;

string  deviceid;
foreach(deviceid, dom.GetObject(ID_DEVICES).EnumUsedIDs()) 
{
    var     device      = dom.GetObject(deviceid);                                              if(debug){WriteLine("Device:"#device#" (id:"#deviceid#")");}
    string  devicetype  = device.HssType();                                                     if(debug){WriteLine("Devicetype:"#devicetype);}

    devicecounter   = devicecounter + 1;
    devicesconcat   = devicesconcat # "\t" # devicetype;

    if( -1 == devicetypes.Find(","# devicetype # ",") )
    {
        devicetypes     = devicetypes # devicetype # ",";
        devicetypecount = devicetypecount + 1;
    }

    string channelid;                                                                                                           
    foreach(channelid,device.Channels().EnumUsedIDs())
    {                                                                                           if(debug){var channel = dom.GetObject(channelid);WriteLine("\t Channel:"#channel#" (id:"#channelid#")");}
        channelcount    = channelcount + 1;
    }
}                                                                                               if(debug){WriteLine(channelcount # " channels " # devicecounter # " devices " # devicetypecount # " devicetypes");}

if( "de" == language )
{
    WriteLine(channelcount # " Kanaele in " # devicecounter # " Geraeten, " # devicetypecount # " Geraetetypen:");
}
else
{
    WriteLine(channelcount # " channels in " # devicecounter # " devices, " # devicetypecount # " devicetypes:");
}

string typenames;

!. string input = "/bin/sh -c 'cat /www/webui/js/lang/"#language#"/translate.lang.deviceDescription.js|sed -r \"s/%DF/ss/g;s/%FC/ue/g;s/%E4/ae/g;s/%F6/oe/g;s/(^\s+|,\s*\$)//g;s/\\"\\s*:\\s*\\"/\\":\\"/g;s/\\"//g;s/^(HM\-RCV\-50:).*\$/\1CCU2 System/;\"|awk -F : -v ORS=, \"{if(length(\$1)>3 && length(\$2)>3) print \$1\\",\\"\$2;}\"|sed \"s/,\$//;\" ";
!. string stderr;
!. system.Exec(input, &typenames,&stderr);                                                         if(debug){WriteLine("Type to Name array:" #typenames)};



string  outputstring;
string  devicetype;
foreach(devicetype,devicetypes.Split(","))
{
    if( devicetype.Length() )
    {                                                                                           if(debug){WriteLine("Device:"#devicetype);}
        devicecounter = 0;
        
        string counttype;
        foreach(counttype,devicesconcat)
        {
            if( counttype.Length() && (counttype == devicetype) )
            {
                devicecounter = devicecounter + 1;
            }
        }

        string  originaldevicetype = devicetype;
        boolean foundnicename=false;
        
        while( !foundnicename && devicetype.Length()>6 )
        {           
            string  nicename;                                                               
            integer devicenameposition   = typenames.Find(devicetype#",");                      if(debug){WriteLine("Searching nicename for:"#devicetype);}

            if( -1 != devicenameposition )
            {                                                                                   
                integer     length          = devicetype.Length();
                string      remainingstring = typenames.Substr(devicenameposition,length-devicenameposition);
                
                nicename    = "(" # remainingstring.StrValueByIndex(",",1) # ")";
                foundnicename = true;
            }
            else
            {
                devicetype = devicetype.Substr(0,devicetype.Length()-1);
            }
        }
        
        outputstring = outputstring # devicecounter # "x " # originaldevicetype # nicename # ", ";
    }
}
WriteLine(outputstring.Substr(0, outputstring.Length() - 2));
WriteLine("--------------------------------------------");
WriteLine("https://github.com/jollyjinx/homematic/blob/master/Inventory.hms");
